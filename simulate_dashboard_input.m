%% simulate_dashboard_input.
% Quick notepad for simulating tile inputs from the dashboard to
% qualityControl. Uses the AVGs generated by generateAVGs.

%% Parameters
mainFolder = Y:\mousebrainmicro\acquisition\2016-02-21
displayRange = [11000,23000]; % as percentile value.
% %% Output window.
% hFig = figure('Position',[400,400,700,900],'Name','Quality control test');
% hAx = axes('Position',[0.05,0.075,0.9,0.9]);
% hIm = [];
% info.lowBox = uicontrol('Style', 'edit', 'String', num2str(displayRange(1)),...
%     'Position', [20 10 50 25],...
%     'FontSize', 9); 
% info.highBox = uicontrol('Style', 'edit', 'String', num2str(displayRange(2)),...
%     'Position', [120 10 50 25],...
%     'FontSize', 9); 

%% Get folder list.
dayList = dir(mainFolder);
dayList = vertcat({dayList.name});
dayList = regexp(dayList,'^(\d{4}-\d{2}-\d{2})$','match');
dayList = vertcat(dayList{:});

%% Go through days
nDays = size(dayList,1);
count = 1;
frameCount = 1; % Wont go over buffer size.
for iDay = 1:nDays
    cDay = dayList{iDay};
    %% Get sub-folders.
    subList = dir(fullfile(mainFolder,cDay));
    subList = regexp(vertcat({subList.name}),'^(\d{2})$','match');
    subList = vertcat(subList{:});
    nSubs = size(subList,1);
    for iSub = 1:nSubs
        cSub = subList{iSub};
        fileList = dir(fullfile(mainFolder,cDay,cSub));
        fileList = regexp(vertcat({fileList.name}),'^(\d{5})$','match');
        fileList = vertcat(fileList{:});
        
        %% Go through files.
        nFiles = size(fileList,1);
        for iFile = 1:nFiles
            cFile = fileList{iFile};
            %% Read file.
            try % Catch smaller file
                I = readTifFast(fullfile(mainFolder,cDay,cSub,cFile,[cFile,'-ngc.0.tif']), imSize,frames, 'uint16');
                fprintf('%s - %s - %s\tFrame: %i File Frame: %i\n',cDay,cSub,cFile,count,frameCount);
                I = mean(I,3);
                stack(:,:,frameCount) = I;

                %% Check if buffer size is reached and start writing.
                if mod(frameCount,bufferSize) == 0
                    writeTifFast( stack, fullfile(outputFolder,[num2str(count),'.tif']), 'uint16');
                    frameCount = 0;
                    stack = zeros(imSize(1), imSize(2), bufferSize, 'uint16');
                end
                count = count + 1;
                frameCount = frameCount + 1;
            end
        end
    end
end
