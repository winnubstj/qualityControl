%% simulate_dashboard_input.
% Quick notepad for simulating tile inputs from the dashboard to
% qualityControl. Uses the AVGs generated by generateAVGs.

%% Parameters
trainingFolder = 'Y:\mousebrainmicro\data\Dashboard training set\2016-02-21\';
bufferSize = 500;
displayRange = [11000,23000]; % as percentile value.
%% Output window.
hFig = figure('Position',[400,400,700,900],'Name','Quality control test');
hAx = axes('Position',[0.05,0.075,0.9,0.9]);
hIm = [];
info.lowBox = uicontrol('Style', 'edit', 'String', num2str(displayRange(1)),...
    'Position', [20 10 50 25],...
    'FontSize', 9); 
info.highBox = uicontrol('Style', 'edit', 'String', num2str(displayRange(2)),...
    'Position', [120 10 50 25],...
    'FontSize', 9); 

%% Read file path info.
fid = fopen(fullfile(trainingFolder,'pathlist.txt'));
filePaths = textscan(fid, '%s','delimiter', '\n');
fclose(fid);

%% Go through tiles.
for iTile = 1:1500
% Get Image.
cFile = (floor(iTile/bufferSize)*bufferSize)+bufferSize;
cFile = fullfile(trainingFolder,sprintf('%i.tif',cFile)); % File from which to read.
cFrame = mod(iTile,bufferSize); % frame in file.
I = imread(cFile,cFrame);

% get tile Info. (move to tilequalitycontrol)
[pathstr,name,~] = fileparts(char(filePaths{1}(iTile,:)));
name = regexp(name,'\d{5}-ngc','match');
microFile = fullfile(pathstr,[char(name{1}),'.microscope']);
TileInfo = fastProtoBuf( microFile, {''}, varargin )
if isempty(hIm)
   hIm = imshow(I,[str2double(info.lowBox.String), str2double(info.highBox.String)]);
else
    hIm.CData = I;
    hAx.CLim = [str2double(info.lowBox.String),str2double(info.highBox.String)];
end
drawnow
end